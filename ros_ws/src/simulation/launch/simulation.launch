<launch>
  <arg name="load_params" default="true" />
  <arg name="corrupt_state_estimate" default="true" />
  <arg name="right_image_topic" default="/realsense/rgb/right_image_raw" />
  <arg name="right_info_topic" default="/realsense/rgb/right_image_info" />
  <arg name="left_image_topic" default="/realsense/rgb/left_image_raw" />
  <arg name="left_info_topic" default="/realsense/rgb/left_image_info" />
  <arg name="depth_image_topic" default="/realsense/depth/image" />
  <arg name="depth_info_topic" default="/realsense/depth/camera_info" />

  <include file="$(find simulation)/launch/unity_ros.launch" >
    <arg name="load_params" value="$(arg load_params)" />
    <arg name="right_image_topic" value="$(arg right_image_topic)" />
    <arg name="right_info_topic" value="$(arg right_info_topic)" />
    <arg name="left_image_topic" value="$(arg left_image_topic)" />
    <arg name="left_info_topic" value="$(arg left_info_topic)" />
    <arg name="depth_image_topic" value="$(arg depth_image_topic)" />
    <arg name="depth_info_topic" value="$(arg depth_info_topic)" />
  </include>

  <node name="Simulation" pkg="simulation" type="Car_build.x86_64"/>

  <node pkg="simulation"
        type="state_estimate_corruptor_node"
        name="state_estimate_corruptor"
        output="screen">

    <!-- random-walk drift factor (grows with distance traveled) (sigma / m) -->
    <param if="$(arg corrupt_state_estimate)" name="drift_rw_factor" value="0.03"/>
    <param unless="$(arg corrupt_state_estimate)" name="drift_rw_factor" value="0.0"/>

    <!-- independent white noise -->
    <param if="$(arg corrupt_state_estimate)" name="pos_white_sig" value="0.005"/>
    <param unless="$(arg corrupt_state_estimate)" name="pos_white_sig" value="0.0"/>

    <!-- average number of seconds between jumps/drift updates -->
    <param if="$(arg corrupt_state_estimate)" name="jump_seconds" value="20.0"/>
    <param unless="$(arg corrupt_state_estimate)" name="jump_seconds" value="-1.0"/>
  </node>

  <node name="w_to_unity" pkg="simulation" type="w_to_unity"/>

  <node pkg="tf2_ros" type="static_transform_publisher"
      name="world_to_map" args="0 0 0 0 0 0 /world /map" />

  <node pkg="tf2_ros" type="static_transform_publisher"
      name="sim_rgb_camera_left" args="0 0 0 0 0 0 /true_body /OurCar/Sensors/RGBCameraLeft" />

  <node pkg="tf2_ros" type="static_transform_publisher"
      name="sim_depth_camera" args="0 0 0 0 0 0 /true_body /OurCar/Sensors/DepthCamera" />

  <!-- Octomap server configuration -->
  <node pkg="octomap_server" type="octomap_server_node" name="octomap_server">
      <param name="resolution" value="0.6" />
      <param name="frame_id" type="string" value="map" />
      <param name="sensor_model/max_range" value="20.0" />
      <param name="pointcloud_min_z" value="-1.05" />
      <param name="pointcloud_max_z" value="1" />
      <remap from="cloud_in" to="/depth_registered/transformed_points" />
  </node>

  <!-- Nodelet Manager -->
  <node pkg="nodelet" type="nodelet" name="my_nodelet_manager" args="manager"/>

  <!-- depth_image_proc Nodelet -->
  <node pkg="nodelet" type="nodelet" name="depth_image_proc_nodelet" args="load depth_image_proc/point_cloud_xyzrgb my_nodelet_manager">
      <remap from="depth_registered/image_rect" to="/unity_ros/OurCar/Sensors/DepthCamera/image_raw_fixed"/>
      <remap from="rgb/camera_info" to="/unity_ros/OurCar/Sensors/RGBCameraLeft/camera_info"/>
      <remap from="rgb/image_rect_color" to="/unity_ros/OurCar/Sensors/RGBCameraLeft/image_raw"/>
      <param name="max_range" value="25.0" />
  </node>

  <!-- Perception Pipeline Nodes -->
  <node pkg="perception_pipeline" type="fix_depth_frame.py" name="perception_node" output="screen"/>
  <node pkg="perception_pipeline" type="point_cloud_frame_fix.py" name="point_cloud_frame_fix" output="screen"/>

  <!-- Transform point cloud node -->
  <node pkg="transform_pointcloud_node" type="transform_pointcloud_node" name="transform_pointcloud_node" output="screen"/>

  <!-- RViz Node -->
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find simulation)/rviz/autonomous.rviz"/>

  <!-- Path Tracker Node -->
  <node name="path_tracker_node" pkg="path_tracker" type="path_tracker_node.py" output="screen"/>

  <!-- Move Base Node -->
  <node pkg="move_base" type="move_base" name="move_base" output="screen">
    <remap from="map" to="/projected_map" />
    <rosparam file="$(find planning)/params/costmap_common_params.yaml" command="load" ns="global_costmap"/>
    <rosparam file="$(find planning)/params/costmap_common_params.yaml" command="load" ns="local_costmap"/>
    <rosparam file="$(find planning)/params/global_costmap_params.yaml" command="load" ns="global_costmap"/>
    <rosparam file="$(find planning)/params/local_costmap_params.yaml" command="load" ns="local_costmap"/>
    <rosparam file="$(find planning)/params/base_local_planner_params.yaml" command="load"/>
  </node>

  <node pkg="tf2_ros" type="static_transform_publisher"
      name="true_body_to_base_link" args="0 0 0 0 0 0 /true_body /base_link" />

  <arg name="depth_image_topic_2" default="/unity_ros/OurCar/Sensors/DepthCamera/image_raw" />
  <arg name="depth_camera_info_topic" default="/unity_ros/OurCar/Sensors/DepthCamera/camera_info" />
  <arg name="scan_topic" default="/scan" />
  <arg name="base_frame" default="true_body"/>
  <arg name="odom_frame" default="body"/>

</launch>
